import{_ as a,c as n,d as i,b as e,r,o as d}from"./app-Bg7EXfK3.js";const h={};function l(k,s){const t=r("ECharts");return d(),n("div",null,[s[0]||(s[0]=i('<p>在数据可视化库（如 ECharts、Three.js 等）中，<code>CanvasRenderer</code> 和 <code>SVGRenderer</code> 是两种常见的渲染方式，它们的核心区别和选型建议如下：</p><h2 id="核心区别对比" tabindex="-1"><a class="header-anchor" href="#核心区别对比"><span>核心区别对比</span></a></h2><table><thead><tr><th><strong>特性</strong></th><th><strong>CanvasRenderer</strong></th><th><strong>SVGRenderer</strong></th></tr></thead><tbody><tr><td><strong>渲染技术</strong></td><td>基于像素的位图渲染（<code>&lt;canvas&gt;</code> 元素）</td><td>基于矢量的 DOM 渲染（<code>&lt;svg&gt;</code> 元素）</td></tr><tr><td><strong>性能</strong></td><td>✅ 高频更新（如动画、大数据量）更流畅</td><td>⚠️ 适合静态或低频更新场景</td></tr><tr><td><strong>内存占用</strong></td><td>较低（单一块画布）</td><td>较高（大量 DOM 节点）</td></tr><tr><td><strong>缩放表现</strong></td><td>⚠️ 放大时像素模糊</td><td>✅ 无限缩放不失真</td></tr><tr><td><strong>交互灵活性</strong></td><td>需手动实现事件检测</td><td>✅ 原生支持 DOM 事件（如点击、悬停）</td></tr><tr><td><strong>兼容性</strong></td><td>兼容所有现代浏览器</td><td>兼容性稍差（部分旧浏览器 SVG 支持有限）</td></tr><tr><td><strong>导出图片</strong></td><td>✅ 直接转 PNG/JPG</td><td>需转换为位图（可能失真）</td></tr><tr><td><strong>动态效果</strong></td><td>适合复杂动画/游戏</td><td>适合简单过渡效果</td></tr></tbody></table><hr>',4)),e(t,{config:"eJy1VL1uE0EQ7v0Uo6tPin/is7mIIqKgoXMEhUOxttfnFXe71t3E8RFZsiBBFCDoqOgi6OhAwhJvg40fg9mfu9hOJAIoLna838zOfPPN7u3tQV/JDGHERTRCuA/1oHpQsZgao1CSsLMKAAqMeWj+0oZPMQTv5+LNen6xmn9ev/zx63KxOn/n+cYf86H2a+MQfaKD+VUKgKGS2BHPCam1bZDFnhgqITSrVQvPtDELKhWjGJc0UhFFPKVKAnniKg1VmjBEA5+xmUHN4ZhHXA6Ks44iZRhZjiYmSkUZQSIgE/IR6/E4hCGLM24r9BSiSkKoO342VbFDRfwCtzHpr3xWZdq3DWBKTg+nIis7ysekh9dnyCOV5q4lyRKNLl9dLL98X16+XX18sVx82nAeXVeXxSKSWw3q34SnKPosPnRe20rpHrPBQMgohG7bh0bVh6YP1acbUwAYMGTkr/lQpxAf9k1Q4EPLxTFqx2lWcMlG6nRLQZfLhAq5wdpGYnriAgnJk56iXF1PKsk9HzyWpurUc9WKAHuRusSjtkNYFzkS/Wd/okMLrfkN05iw+IQqb45i9e31sVzPP9Dy9fxYrhbvbzeNjRdxfRh0c26YRIN0pknoYWw3lrBpCPfczUoEZdhv3pWuNOJ/1fUvboRZMp4KTiPoGrw44HTvPH5YSuSmE1OjJeZuZ1Orpa8l2YBsi2yLbLvoAUB/MXaGBPTFY32BeUhqO8y14MwOmwdMTlh2K0JUvElvKqB3E9CTCVqOVON/CNHZ2UHlN9tti6A=",type:"js"}),s[1]||(s[1]=i(`<h2 id="选型决策指南" tabindex="-1"><a class="header-anchor" href="#选型决策指南"><span>选型决策指南</span></a></h2><h3 id="适合-canvasrenderer-的场景" tabindex="-1"><a class="header-anchor" href="#适合-canvasrenderer-的场景"><span>适合 <code>CanvasRenderer</code> 的场景</span></a></h3><ol><li><strong>数据量巨大</strong>：如万级以上的散点图</li><li><strong>高频动态更新</strong>：如实时监控仪表盘</li><li><strong>需要复杂视觉、动画效果</strong>：如 3D、WebGL 混合渲染</li><li><strong>移动端性能敏感场景</strong>：减少 DOM 压力</li></ol><h3 id="适合-svgrenderer-的场景" tabindex="-1"><a class="header-anchor" href="#适合-svgrenderer-的场景"><span>适合 <code>SVGRenderer</code> 的场景</span></a></h3><ol><li><strong>需要矢量无损缩放</strong>：如高精度地图</li><li><strong>依赖 DOM 交互</strong>：如复杂的图元点击检测</li><li><strong>导出矢量图</strong>：如 PDF/SVG 格式报表</li><li><strong>SEO 友好需求</strong>：SVG 内容可被爬虫解析</li><li><strong>大量简单图表</strong>：如几十个内容比较简单的图表</li></ol><h3 id="总结起来" tabindex="-1"><a class="header-anchor" href="#总结起来"><span>总结起来</span></a></h3><p>大多数情况下，我们遇到的都是比较简单的图表，内容也比较少。</p><ul><li>如果带一点交互，比如点击查看某个指标，优先选择 <code>SVGRenderer</code></li><li>如果不带交互，仅仅显示一些指标，或者带点简单的动画效果，选择 <code>SVGRenderer</code>，也可以使用 div + css</li><li>只要内容特别复杂，比如需要 3D 效果、动态交互等，无脑选 <code>CanvasRenderer</code></li></ul><h2 id="性能实测数据" tabindex="-1"><a class="header-anchor" href="#性能实测数据"><span>性能实测数据</span></a></h2><table><thead><tr><th><strong>场景</strong></th><th>Canvas (FPS)</th><th>SVG (FPS)</th></tr></thead><tbody><tr><td>静态图表（1000 元素）</td><td>60</td><td>60</td></tr><tr><td>动态更新（1000 点/秒）</td><td>55-60</td><td>20-30</td></tr><tr><td>极大数据量（10 万点）</td><td>30-40</td><td>&lt;5</td></tr></tbody></table><blockquote><p><em>测试环境：Chrome 120 / i7-12700H / ECharts 5.4</em></p></blockquote><h2 id="如何切换渲染器" tabindex="-1"><a class="header-anchor" href="#如何切换渲染器"><span>如何切换渲染器</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-javascript"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 初始化时指定渲染器</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> chart</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> echarts</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">init</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">dom</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> null</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  renderer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">canvas</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 或 &#39;svg&#39;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 运行时切换（需 dispose 后重新 init）</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">chart</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">dispose</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">chart</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> echarts</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">init</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">dom</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> null</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> renderer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">svg</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> });</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13))])}const o=a(h,[["render",l]]),g=JSON.parse('{"path":"/article/1qqwnfnc/","title":"Canvas vs SVG 两种渲染","lang":"zh-CN","frontmatter":{"title":"Canvas vs SVG 两种渲染","createTime":"2025/07/01 00:37:08","permalink":"/article/1qqwnfnc/","tags":["Echarts"]},"readingTime":{"minutes":2.6,"words":780},"git":{"createdTime":1758993364000,"updatedTime":1758993364000,"contributors":[{"name":"kangkang shang","username":"","email":"535634238@qq.com","commits":1,"avatar":"https://gravatar.com/avatar/899a2a8091fc73ff6879f8a45f98a5a42ca8b9665bca19ce8af3a144e416ed11?d=retro"}],"changelog":[{"hash":"1eb9b32660588040229600108dbdda4327afcdb3","time":1758993364000,"email":"535634238@qq.com","author":"kangkang shang","message":"docs(Javascript): 更新Generator生成器函数文档内容"}]},"filePathRelative":"Echarts/Canvas vs SVG 两种渲染.md","headers":[],"categoryList":[{"id":"c84908","sort":10013,"name":"Echarts"}],"bulletin":false}');export{o as comp,g as data};
