import{_ as l,c as h,d as e,a as i,b as t,e as a,r as p,o as k}from"./app-Bg7EXfK3.js";const d={},r={class:"code-block-title","data-title":"vite.config.ts"},g={class:"code-block-title-bar"},c={class:"title"},o={class:"code-block-title","data-title":"env.d.ts"},u={class:"code-block-title-bar"},y={class:"title"},v={class:"code-block-title","data-title":"src/router/index.ts"},D={class:"code-block-title-bar"},A={class:"title"},m={class:"code-block-title","data-title":"App.vue"},b={class:"code-block-title-bar"},B={class:"title"},f={class:"code-block-title","data-title":"src/types/typed-router.d.ts"},C={class:"code-block-title-bar"},x={class:"title"},E={class:"code-block-title","data-title":"src/router/index.ts"},q={class:"code-block-title-bar"},F={class:"title"};function _(V,s){const n=p("VPIcon");return k(),h("div",null,[s[12]||(s[12]=e(`<p>Unplugin Vue Router 能帮你<strong>自动生成路由</strong>，让你从繁琐的手动配置中解脱出来，提升开发效率。下面是一份基础使用说明，助你快速上手。</p><p>下面是一个表格，帮你快速了解 Unplugin Vue Router 如何根据文件结构生成路由：</p><table><thead><tr><th style="text-align:left;">文件路径</th><th style="text-align:left;">访问路径 (Route)</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>src/pages/index.vue</code></td><td style="text-align:left;"><code>/</code></td><td style="text-align:left;">首页</td></tr><tr><td style="text-align:left;"><code>src/pages/about.vue</code></td><td style="text-align:left;"><code>/about</code></td><td style="text-align:left;">关于页面</td></tr><tr><td style="text-align:left;"><code>src/pages/users/index.vue</code></td><td style="text-align:left;"><code>/users</code></td><td style="text-align:left;">用户列表页</td></tr><tr><td style="text-align:left;"><code>src/pages/users/[id].vue</code></td><td style="text-align:left;"><code>/users/:id</code></td><td style="text-align:left;">用户详情页，<code>[id]</code> 为<strong>必需参数</strong></td></tr><tr><td style="text-align:left;"><code>src/pages/users/[[id]].vue</code></td><td style="text-align:left;"><code>/users/:id?</code></td><td style="text-align:left;">用户页，<code>[[id]]</code> 为<strong>可选参数</strong></td></tr><tr><td style="text-align:left;"><code>src/pages/articles/[slugs]+.vue</code></td><td style="text-align:left;"><code>/articles/:slugs+</code></td><td style="text-align:left;">文章页，<code>[slugs]+</code> 可匹配<strong>一个或多个</strong>路径段</td></tr><tr><td style="text-align:left;"><code>src/pages/[...404].vue</code></td><td style="text-align:left;"><code>/*</code></td><td style="text-align:left;">404 页面，捕获所有未定义的路由</td></tr><tr><td style="text-align:left;"><code>src/pages/parent.vue</code></td><td style="text-align:left;"><code>/parent</code></td><td style="text-align:left;">父路由组件，需包含 <code>&lt;router-view&gt;</code> 用于渲染子路由</td></tr><tr><td style="text-align:left;"><code>src/pages/parent/child.vue</code></td><td style="text-align:left;"><code>/parent/child</code></td><td style="text-align:left;">子路由组件，路径会自动嵌套</td></tr></tbody></table><h2 id="🔧-安装与配置" tabindex="-1"><a class="header-anchor" href="#🔧-安装与配置"><span>🔧 安装与配置</span></a></h2><h3 id="_1-安装插件" tabindex="-1"><a class="header-anchor" href="#_1-安装插件"><span>1. 安装插件</span></a></h3><p>在你的 Vue 3 项目中，通过 npm 或 yarn 等包管理器安装 <code>unplugin-vue-router</code>。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">npm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -D</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> unplugin-vue-router</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 或</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">yarn</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -D</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> unplugin-vue-router</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 或</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pnpm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -D</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> unplugin-vue-router</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-配置-vite" tabindex="-1"><a class="header-anchor" href="#_2-配置-vite"><span>2. 配置 Vite</span></a></h3><p>在你的 <code>vite.config.ts</code> 中引入并配置插件。<strong>关键点：<code>VueRouter()</code> 必须放在 <code>vue()</code> 插件之前</strong>。</p>`,9)),i("div",r,[i("div",g,[i("span",c,[t(n,{provider:"iconify",name:"vscode-icons:file-type-vite"}),s[0]||(s[0]=a("vite.config.ts",-1))])]),s[1]||(s[1]=e(`<div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-ts"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> defineConfig</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> }</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> from</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">vite</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> vue</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> from</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">@vitejs/plugin-vue</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> VueRouter</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> from</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">unplugin-vue-router/vite</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 引入插件</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">export</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> default</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> defineConfig</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">({</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  plugins</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: [</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 配置 unplugin-vue-router</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    VueRouter</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">({</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">      /* 插件选项，例如 routesFolder: &#39;src/pages&#39; */</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }),</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    vue</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(), </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 确保 vue() 在 VueRouter() 之后</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  ],</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1))]),s[13]||(s[13]=i("h3",{id:"_3-更新-typescript-配置",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#_3-更新-typescript-配置"},[i("span",null,"3. 更新 TypeScript 配置")])],-1)),s[14]||(s[14]=i("p",null,[a("为了让 TypeScript 识别自动生成的路由类型，在 "),i("code",null,"env.d.ts"),a(" 或类似类型声明文件中添加以下引用：")],-1)),i("div",o,[i("div",u,[i("span",y,[t(n,{provider:"iconify",name:"vscode-icons:file-type-typescript"}),s[2]||(s[2]=a("env.d.ts",-1))])]),s[3]||(s[3]=e(`<div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-ts"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">/// </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">reference</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> types</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">vite/client</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">/// &lt;reference types=&quot;unplugin-vue-router/client&quot; /&gt;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 添加这行</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,1))]),s[15]||(s[15]=i("h3",{id:"_4-修改路由文件",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#_4-修改路由文件"},[i("span",null,"4. 修改路由文件")])],-1)),s[16]||(s[16]=i("p",null,[a("你原本手动创建路由的文件（通常是 "),i("code",null,"src/router/index.ts"),a("）可以简化为：")],-1)),i("div",v,[i("div",D,[i("span",A,[t(n,{provider:"iconify",name:"vscode-icons:file-type-typescript"}),s[4]||(s[4]=a("src/router/index.ts",-1))])]),s[5]||(s[5]=e(`<div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-ts"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 注意是从 vue-</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;" class="highlighted-word">router</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">/auto 导入</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> createRouter</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> createWebHistory</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> }</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> from</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">vue-</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;" class="highlighted-word">router</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/auto</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 插件会自动生成 routes 数组</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> routes</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> }</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> from</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">vue-</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;" class="highlighted-word">router</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/auto-routes</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;" class="highlighted-word">router</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> createRouter</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">({</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  history</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">createWebHistory</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(),</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  routes</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">, </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 使用自动生成的路由配置</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">export</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> default</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;" class="highlighted-word">router</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1))]),s[17]||(s[17]=i("h3",{id:"_5-确保-app-vue-使用-routerview",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#_5-确保-app-vue-使用-routerview"},[i("span",null,"5. 确保 App.vue 使用 RouterView")])],-1)),s[18]||(s[18]=i("p",null,[a("你的 "),i("code",null,"src/App.vue"),a(" 需要包含 "),i("code",null,"<RouterView />"),a(" 来显示页面组件。")],-1)),i("div",m,[i("div",b,[i("span",B,[t(n,{provider:"iconify",name:"vscode-icons:file-type-vue"}),s[6]||(s[6]=a("App.vue",-1))])]),s[7]||(s[7]=e(`<div class="language-vue line-numbers-mode" data-highlighter="shiki" data-ext="vue" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-vue"><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">template</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">RouterView</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">template</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1))]),s[19]||(s[19]=e(`<h2 id="📝-使用自动生成的路由" tabindex="-1"><a class="header-anchor" href="#📝-使用自动生成的路由"><span>📝 使用自动生成的路由</span></a></h2><p>配置完成后，<strong><code>src/pages</code></strong> 目录下的 <code>.vue</code> 文件会自动转换为路由。</p><h3 id="_1-基本路由" tabindex="-1"><a class="header-anchor" href="#_1-基本路由"><span>1. 基本路由</span></a></h3><ul><li><code>src/pages/index.vue</code> 对应路由 <code>/</code></li><li><code>src/pages/about.vue</code> 对应路由 <code>/about</code>。</li></ul><h3 id="_2-动态路由" tabindex="-1"><a class="header-anchor" href="#_2-动态路由"><span>2. 动态路由</span></a></h3><p>使用方括号命名文件可以定义动态路由。</p><ul><li><code>src/pages/users/[id].vue</code> 生成路由 <code>/users/:id</code>。在组件内可通过 <code>const { id } = useRoute().params</code> 获取参数。</li><li>可选参数使用双括号，如 <code>[[id]]</code>, 生成路由 <code>/users/:id?</code>。在组件内可通过 <code>const { id } = useRoute().query</code> 获取参数。</li></ul><h3 id="_3-嵌套路由" tabindex="-1"><a class="header-anchor" href="#_3-嵌套路由"><span>3. 嵌套路由</span></a></h3><p>创建父子目录结构，并在父组件中使用 <code>&lt;router-view&gt;</code>。</p><p>例如：</p><p><code>src/pages/parent.vue</code> 和 <code>src/pages/parent/child.vue</code> 会生成嵌套路由 <code>/parent/child</code>。父组件 <code>parent.vue</code> 中需要包含 <code>&lt;router-view/&gt;</code> 来渲染子组件。</p><h3 id="_4-404-路由" tabindex="-1"><a class="header-anchor" href="#_4-404-路由"><span>4. 404 路由</span></a></h3><p>创建一个文件名为 <code>[...404].vue</code> 的组件，它会被用来匹配所有未定义的路由，通常作为 404 页面使用。</p><h2 id="⚙️-自定义路由元信息" tabindex="-1"><a class="header-anchor" href="#⚙️-自定义路由元信息"><span>⚙️ 自定义路由元信息</span></a></h2><p>你可以使用 <code>definePage</code> 宏为页面添加路由元信息（meta），例如页面标题、所需的认证权限等。</p><div class="language-vue line-numbers-mode" data-highlighter="shiki" data-ext="vue" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-vue"><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">script</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> setup</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">definePage</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">({</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  meta</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    requiresAuth</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 自定义元信息</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    title</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">用户主页</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  },</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">});</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 或者使用从外部导入的变量（插件支持）</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> appName</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> }</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> from</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">@/constants</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">definePage</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">({</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  meta</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    title</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> \`</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">首页 - </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">\${</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">appName</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">}</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">\`</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  },</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">});</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 如果需要根据路由状态动态定义元信息，可使用回调函数</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">definePage</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">({</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  meta</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">router</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> ({</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    title</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> \`</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">项目: </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">\${</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">router</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">currentRoute</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">value</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">query</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">code </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">||</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">默认标题</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">}</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">\`</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  }),</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">});</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">script</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为了让 TypeScript 识别这些自定义的 <code>meta</code> 字段，你需要进行类型扩展。创建一个类型声明文件（如 <code>src/types/typed-router.d.ts</code>）：</p>`,17)),i("div",f,[i("div",C,[i("span",x,[t(n,{provider:"iconify",name:"vscode-icons:file-type-typescript"}),s[8]||(s[8]=a("src/types/typed-router.d.ts",-1))])]),s[9]||(s[9]=e(`<div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-ts"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">vue-router/auto-routes</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">declare</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> module</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">vue-router/auto-routes</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  interface</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> RouteMeta</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    /**</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">     * 页面标题</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">     */</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    title</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">string</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    /**</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">     * 是否需要认证</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">     */</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    requiresAuth</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">boolean</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // ... 其他你需要的字段</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1))]),s[20]||(s[20]=e('<h2 id="⚠️-注意事项" tabindex="-1"><a class="header-anchor" href="#⚠️-注意事项"><span>⚠️ 注意事项</span></a></h2><h3 id="_1-插件顺序" tabindex="-1"><a class="header-anchor" href="#_1-插件顺序"><span>1. 插件顺序</span></a></h3><p>在 <code>vite.config.ts</code> 中，<code>VueRouter()</code> 插件<strong>必须</strong>放在 <code>vue()</code> 插件之前。</p><h3 id="_2-自定义路由" tabindex="-1"><a class="header-anchor" href="#_2-自定义路由"><span>2. 自定义路由</span></a></h3><p>如果自动生成的路由无法满足特殊需求（如非常特殊的路径或复杂逻辑），你仍然可以在 <code>routes</code> 数组中手动添加自定义路由，并与自动生成的路由一起使用。</p>',5)),i("div",E,[i("div",q,[i("span",F,[t(n,{provider:"iconify",name:"vscode-icons:file-type-typescript"}),s[10]||(s[10]=a("src/router/index.ts",-1))])]),s[11]||(s[11]=e(`<div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-ts"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> createRouter</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> createWebHistory</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> }</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> from</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">vue-</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;" class="highlighted-word">router</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/auto</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> routes</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> }</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> from</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">vue-</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;" class="highlighted-word">router</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/auto-routes</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 引入自定义组件</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> CustomComponent</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> from</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">@/views/CustomComponent.vue</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;" class="highlighted-word">router</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> createRouter</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">({</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  history</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">createWebHistory</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(),</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  routes</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: [</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    ...</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">routes</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">, </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 展开自动生成的路由</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 添加自定义路由</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">      path</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/custom</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">      component</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">CustomComponent</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">      meta</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: { </span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">requiresAuth</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">false</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> },</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    },</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  ],</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">export</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> default</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;" class="highlighted-word">router</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1))]),s[21]||(s[21]=e('<h3 id="_3-data-loaders" tabindex="-1"><a class="header-anchor" href="#_3-data-loaders"><span>3. Data Loaders</span></a></h3><p>一些高级功能（如 Data Loaders）仍标记为实验性，API 可能发生变化，在生产环境中使用需留意。</p><p>Data Loaders 主要用来在页面正式渲染前加载数据，确保数据的及时和准确性。</p><p>如果你使用了实验性的 <mark>Data Loaders</mark> 功能并在动态路由（如 <code>[id].vue</code>）中，为了确保参数变化时数据加载器能重新执行，<strong>必须将 Data Loader 从页面组件中导出</strong>。</p><h3 id="💡-核心优势" tabindex="-1"><a class="header-anchor" href="#💡-核心优势"><span>💡 核心优势</span></a></h3><p>Unplugin Vue Router 的核心优势在于：</p><ul><li><strong>开发效率提升</strong>：无需手动编写和维护路由配置文件，文件即路由。</li><li><strong>类型安全</strong>：与 TypeScript 无缝集成，提供优秀的类型提示和自动补全，减少错误。</li><li><strong>约定优于配置</strong>：遵循简单的文件命名约定即可支持动态路由、嵌套路由、404 路由等复杂场景。</li><li><strong>热更新支持</strong>：在开发过程中，添加、删除或修改页面文件都会自动更新路由配置。</li></ul><p>希望这份基础使用说明能帮助你快速上手 Unplugin Vue Router，享受更流畅的路由开发体验。更详细的配置和高级用法请参考其官方文档。</p>',8))])}const R=l(d,[["render",_]]),T=JSON.parse('{"path":"/Vue/l1wyrawd/","title":"基础介绍","lang":"zh-CN","frontmatter":{"title":"基础介绍","createTime":"2025/09/19 15:52:47","permalink":"/Vue/l1wyrawd/"},"readingTime":{"minutes":4.71,"words":1414},"git":{"createdTime":1758993364000,"updatedTime":1758993364000,"contributors":[{"name":"kangkang shang","username":"","email":"535634238@qq.com","commits":1,"avatar":"https://gravatar.com/avatar/899a2a8091fc73ff6879f8a45f98a5a42ca8b9665bca19ce8af3a144e416ed11?d=retro"}],"changelog":[{"hash":"1eb9b32660588040229600108dbdda4327afcdb3","time":1758993364000,"email":"535634238@qq.com","author":"kangkang shang","message":"docs(Javascript): 更新Generator生成器函数文档内容"}]},"filePathRelative":"notes/Vue/6.Unplugin Vue Router/1.基础介绍.md","headers":[],"bulletin":false}');export{R as comp,T as data};
