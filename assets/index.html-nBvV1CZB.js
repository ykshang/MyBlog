import{_ as i,c as a,d as e,o as n}from"./app-Bg7EXfK3.js";const l={};function h(t,s){return n(),a("div",null,[...s[0]||(s[0]=[e(`<p><strong>pnpm workspace</strong> 是 pnpm 提供的 <strong>Monorepo（单体仓库）</strong> 管理方案，允许在单个代码仓库中管理多个项目（包），并高效共享依赖。相比 <code>npm/yarn workspace</code>，pnpm 通过<strong>硬链接</strong>节省磁盘空间，依赖管理更高效。</p><h2 id="一、核心概念" tabindex="-1"><a class="header-anchor" href="#一、核心概念"><span>一、核心概念</span></a></h2><ul><li><strong>Workspace（工作区）</strong>：一个包含多个子项目的根目录，通过 <code>pnpm-workspace.yaml</code> 定义。</li><li><strong>共享依赖</strong>：所有子项目共用 <code>node_modules</code>，避免重复安装。</li><li><strong>依赖提升</strong>：将共用的依赖提升到根目录的 <code>node_modules</code>，减少冗余。</li></ul><h2 id="二、初始化-workspace" tabindex="-1"><a class="header-anchor" href="#二、初始化-workspace"><span>二、初始化 Workspace</span></a></h2><h3 id="步骤-1-创建项目结构" tabindex="-1"><a class="header-anchor" href="#步骤-1-创建项目结构"><span><strong>步骤 1：创建项目结构</strong></span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mkdir</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> my-monorepo</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> &amp;&amp;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> my-monorepo</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pnpm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> init</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">              # 初始化根目录 package.json</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>目录结构示例：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>my-monorepo/</span></span>
<span class="line"><span>├── packages/</span></span>
<span class="line"><span>│   ├── app/           # 子项目1（如前端应用）</span></span>
<span class="line"><span>│   │   └── package.json</span></span>
<span class="line"><span>│   └── utils/         # 子项目2（如共享工具库）</span></span>
<span class="line"><span>│       └── package.json</span></span>
<span class="line"><span>├── pnpm-workspace.yaml</span></span>
<span class="line"><span>└── package.json</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="步骤-2-配置-pnpm-workspace-yaml" tabindex="-1"><a class="header-anchor" href="#步骤-2-配置-pnpm-workspace-yaml"><span><strong>步骤 2：配置 <code>pnpm-workspace.yaml</code></strong></span></a></h3><p>在根目录创建 <code>pnpm-workspace.yaml</code>，定义子项目路径：</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">packages</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  -</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">packages/*</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # 匹配 packages/ 下的所有项目</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  -</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">apps/*</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # 也可以匹配其他目录</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="步骤-3-设置子项目" tabindex="-1"><a class="header-anchor" href="#步骤-3-设置子项目"><span><strong>步骤 3：设置子项目</strong></span></a></h3><p>在每个子项目（如 <code>packages/utils</code>）中初始化 <code>package.json</code>：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> packages/utils</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pnpm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> init</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>确保 <code>name</code> 符合包命名规范（如 <code>@my-monorepo/utils</code>）。</p><hr><h2 id="_3-安装依赖" tabindex="-1"><a class="header-anchor" href="#_3-安装依赖"><span><strong>3. 安装依赖</strong></span></a></h2><h3 id="_1-全局安装-根目录" tabindex="-1"><a class="header-anchor" href="#_1-全局安装-根目录"><span><strong>(1) 全局安装（根目录）</strong></span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 安装所有子项目的依赖（类似 \`npm install\`）</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pnpm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 安装全局工具（如 typescript、eslint）</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pnpm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -Dw</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> typescript</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> eslint</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>-D</code>：开发依赖（<code>devDependencies</code>）</li><li><code>-w</code>：安装在<strong>根目录</strong>（workspace root）</li></ul><h3 id="_2-为子项目单独安装" tabindex="-1"><a class="header-anchor" href="#_2-为子项目单独安装"><span><strong>(2) 为子项目单独安装</strong></span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 进入子项目目录安装</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> packages/app</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pnpm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> react</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 或直接从根目录安装（指定子项目）</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pnpm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> react</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --filter</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> @my-monorepo/app</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>--filter</code>：指定目标子项目（支持通配符，如 <code>--filter &quot;packages/*&quot;</code>）</li></ul><h3 id="_3-子项目之间互相引用" tabindex="-1"><a class="header-anchor" href="#_3-子项目之间互相引用"><span><strong>(3) 子项目之间互相引用</strong></span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 在 packages/app 中引用 packages/utils</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pnpm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> @my-monorepo/utils</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --filter</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> @my-monorepo/app</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>这会在 <code>app/package.json</code> 中添加：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">dependencies</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">@my-monorepo/utils</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">workspace:*</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_4-运行脚本" tabindex="-1"><a class="header-anchor" href="#_4-运行脚本"><span><strong>4. 运行脚本</strong></span></a></h2><h3 id="_1-运行单个子项目的脚本" tabindex="-1"><a class="header-anchor" href="#_1-运行单个子项目的脚本"><span><strong>(1) 运行单个子项目的脚本</strong></span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 进入子项目运行</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> packages/app</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pnpm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 或从根目录运行（推荐）</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pnpm</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --filter</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> @my-monorepo/app</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-并行运行所有子项目的脚本" tabindex="-1"><a class="header-anchor" href="#_2-并行运行所有子项目的脚本"><span><strong>(2) 并行运行所有子项目的脚本</strong></span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pnpm</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -r</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> build</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">     # 在所有子项目中运行 build 命令</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>-r</code>：递归执行（<code>--recursive</code>）</li></ul><h3 id="_3-仅运行部分子项目的脚本" tabindex="-1"><a class="header-anchor" href="#_3-仅运行部分子项目的脚本"><span><strong>(3) 仅运行部分子项目的脚本</strong></span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pnpm</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --filter</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">@my-monorepo/app</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> dev</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pnpm</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --filter</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">{packages/*,apps/*}</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> run</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> test</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_5-依赖管理优化" tabindex="-1"><a class="header-anchor" href="#_5-依赖管理优化"><span><strong>5. 依赖管理优化</strong></span></a></h2><h3 id="_1-提升公共依赖" tabindex="-1"><a class="header-anchor" href="#_1-提升公共依赖"><span><strong>(1) 提升公共依赖</strong></span></a></h3><p>默认情况下，pnpm 会自动将公共依赖提升到根目录 <code>node_modules</code>，减少重复安装。</p><h3 id="_2-禁止依赖提升" tabindex="-1"><a class="header-anchor" href="#_2-禁止依赖提升"><span><strong>(2) 禁止依赖提升</strong></span></a></h3><p>在 <code>pnpm-workspace.yaml</code> 中设置：</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">shared-workspace-lockfile</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> false</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_3-查看依赖树" tabindex="-1"><a class="header-anchor" href="#_3-查看依赖树"><span><strong>(3) 查看依赖树</strong></span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pnpm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> why</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> lodash</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">       # 查看 lodash 被哪些包依赖</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pnpm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> list</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -r</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">          # 递归列出所有子项目的依赖</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_6-发布-workspace-包" tabindex="-1"><a class="header-anchor" href="#_6-发布-workspace-包"><span><strong>6. 发布 Workspace 包</strong></span></a></h2><h3 id="_1-版本管理" tabindex="-1"><a class="header-anchor" href="#_1-版本管理"><span><strong>(1) 版本管理</strong></span></a></h3><p>使用 <code>changesets</code> 或 <code>pnpm version</code> 管理版本号：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 更新所有子项目版本</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pnpm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> version</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> patch</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -r</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-发布到-npm" tabindex="-1"><a class="header-anchor" href="#_2-发布到-npm"><span><strong>(2) 发布到 npm</strong></span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">pnpm</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -r</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> publish</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">       # 递归发布所有包（需提前登录 npm）</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h2 id="_7-常见问题" tabindex="-1"><a class="header-anchor" href="#_7-常见问题"><span><strong>7. 常见问题</strong></span></a></h2><h3 id="q1-如何解决子项目之间的循环依赖" tabindex="-1"><a class="header-anchor" href="#q1-如何解决子项目之间的循环依赖"><span><strong>Q1: 如何解决子项目之间的循环依赖？</strong></span></a></h3><ul><li>使用 <code>&quot;peerDependencies&quot;</code> 替代直接依赖。</li><li>重构代码，提取公共逻辑到独立包。</li></ul><h3 id="q2-如何限制某些依赖只能在根目录安装" tabindex="-1"><a class="header-anchor" href="#q2-如何限制某些依赖只能在根目录安装"><span><strong>Q2: 如何限制某些依赖只能在根目录安装？</strong></span></a></h3><p>在 <code>pnpm-workspace.yaml</code> 中设置：</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">neverBuiltDependencies</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  -</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> fsevents</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> # 禁止某些依赖安装</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="q3-如何兼容-npm-yarn-workspace-项目迁移" tabindex="-1"><a class="header-anchor" href="#q3-如何兼容-npm-yarn-workspace-项目迁移"><span><strong>Q3: 如何兼容 <code>npm/yarn workspace</code> 项目迁移？</strong></span></a></h3><ul><li>替换 <code>workspace:</code> 协议为具体版本号（如 <code>&quot;^1.0.0&quot;</code>）。</li><li>使用 <code>pnpm import</code> 从 <code>yarn.lock</code> 或 <code>package-lock.json</code> 生成 <code>pnpm-lock.yaml</code>。</li></ul><hr><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span><strong>总结</strong></span></a></h2><table><thead><tr><th>功能</th><th>命令示例</th></tr></thead><tbody><tr><td><strong>初始化 workspace</strong></td><td><code>pnpm init</code> + <code>pnpm-workspace.yaml</code></td></tr><tr><td><strong>安装依赖</strong></td><td><code>pnpm add react --filter @my-monorepo/app</code></td></tr><tr><td><strong>运行脚本</strong></td><td><code>pnpm --filter @my-monorepo/app dev</code></td></tr><tr><td><strong>批量操作</strong></td><td><code>pnpm -r run build</code></td></tr><tr><td><strong>发布包</strong></td><td><code>pnpm -r publish</code></td></tr></tbody></table><p>pnpm workspace 是 <strong>Monorepo 的最佳实践</strong>，适合管理复杂的前端/全栈项目（如 Next.js + NestJS + 共享库）。🚀</p>`,65)])])}const p=i(l,[["render",h]]),r=JSON.parse('{"path":"/Pnpm/fjvdfhim/","title":"2. workspace 使用详解","lang":"zh-CN","frontmatter":{"title":"2. workspace 使用详解","createTime":"2025/06/14 10:58:49","permalink":"/Pnpm/fjvdfhim/"},"readingTime":{"minutes":2.98,"words":893},"git":{"createdTime":1758993364000,"updatedTime":1758993364000,"contributors":[{"name":"kangkang shang","username":"","email":"535634238@qq.com","commits":1,"avatar":"https://gravatar.com/avatar/899a2a8091fc73ff6879f8a45f98a5a42ca8b9665bca19ce8af3a144e416ed11?d=retro"}],"changelog":[{"hash":"1eb9b32660588040229600108dbdda4327afcdb3","time":1758993364000,"email":"535634238@qq.com","author":"kangkang shang","message":"docs(Javascript): 更新Generator生成器函数文档内容"}]},"filePathRelative":"notes/Pnpm/2.workspace 使用详解.md","headers":[],"bulletin":false}');export{p as comp,r as data};
