import{_ as c,c as g,d as n,a as s,b as k,e as i,w as e,r as t,o}from"./app-Bg7EXfK3.js";const y={},u={class:"code-block-title","data-title":"webpack.config.js"},b={class:"code-block-title-bar"},v={class:"title"};function m(A,a){const p=t("VPIcon"),d=t("Tabs"),r=t("VPLink");return o(),g("div",null,[a[7]||(a[7]=n('<h2 id="一、简介" tabindex="-1"><a class="header-anchor" href="#一、简介"><span>一、简介</span></a></h2><p>Tree Shaking 是现代 JavaScript 打包工具中实现 <mark>死代码消除（Dead Code Elimination）</mark> 的一项关键优化技术。</p><p>Tree Shaking 可以 <strong>显著减小打包后的文件体积，提高网页加载速度</strong>。</p><p>Tree Shaking 通过静态分析移除代码中未被使用的部分（就像摇树让枯叶落下一样），能够在打包时安全地移除：</p><ul><li>未被导入的模块</li><li>模块中未被使用的导出</li><li>不会产生副作用的冗余代码</li></ul><h2 id="二、工作流程" tabindex="-1"><a class="header-anchor" href="#二、工作流程"><span>二、工作流程</span></a></h2><p>Tree Shaking 的大致过程如下：</p><h3 id="_1、依赖关系分析阶段" tabindex="-1"><a class="header-anchor" href="#_1、依赖关系分析阶段"><span>1、依赖关系分析阶段</span></a></h3><p>该阶段主要完成以下任务：</p><ul><li>构建依赖图：打包工具从入口文件开始，分析所有模块的导入导出关系</li><li>标记依赖：识别哪些导出被其他模块使用，哪些从未被引用</li><li>静态分析：基于 ES6 模块的静态结构（<code>import</code>/<code>export</code> 必须是顶层声明）</li></ul><h3 id="_2、代码标记阶段" tabindex="-1"><a class="header-anchor" href="#_2、代码标记阶段"><span>2、代码标记阶段</span></a></h3><p>该阶段主要完成以下任务：</p><ul><li>标记&quot;活的&quot;代码：从入口开始，标记所有被直接或间接引用的导出</li><li>识别副作用：通过<code>package.json</code>的<code>sideEffects</code>属性或 <mark>魔法注释</mark> 标记有副作用的模块</li></ul><h3 id="_3、代码消除阶段" tabindex="-1"><a class="header-anchor" href="#_3、代码消除阶段"><span>3、代码消除阶段</span></a></h3><p>该阶段主要完成以下任务：</p><ul><li>移除未引用代码：删除所有未被标记的导出和相关的代码</li><li>保留副作用代码：即使某些代码未被直接使用，但如果它有副作用也会被保留</li></ul><h3 id="_4、优化输出阶段" tabindex="-1"><a class="header-anchor" href="#_4、优化输出阶段"><span>4、优化输出阶段</span></a></h3><p>该阶段主要完成以下任务：</p><ul><li>合并代码块：将多个小文件合并成一个大文件</li><li>压缩代码：移除不必要的空格、注释等</li><li>生成最终包：输出只包含必要代码的打包文件</li></ul><h2 id="三、如何开启" tabindex="-1"><a class="header-anchor" href="#三、如何开启"><span>三、如何开启</span></a></h2><h3 id="_1、webpack-4-及以上版本" tabindex="-1"><a class="header-anchor" href="#_1、webpack-4-及以上版本"><span>1、Webpack 4 及以上版本</span></a></h3><p>从 Webpack 4 开始，Webpack 内置了 <code>Terser</code> 插件，用于压缩代码。<code>Terser</code> 插件集成了 Tree Shaking 功能，能够自动移除未使用的代码。</p><p>只要设置 <code>mode</code> 为 <code>production</code>，Webpack 会自动启用该插件，无需手动配置。</p>',23)),s("div",u,[s("div",b,[s("span",v,[k(p,{provider:"iconify",name:"vscode-icons:file-type-webpack"}),a[0]||(a[0]=i("webpack.config.js",-1))])]),a[1]||(a[1]=n(`<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-js"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">module</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">exports</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  mode</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">production</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // 其他配置...</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1))]),a[8]||(a[8]=s("h3",{id:"_2、webpack-3-及以下版本",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2、webpack-3-及以下版本"},[s("span",null,"2、Webpack 3 及以下版本")])],-1)),a[9]||(a[9]=s("p",null,"在老版本的 Webpack 中，要开启 Tree Shaking，需要手动配置插件。",-1)),k(d,{id:"136",data:[{id:"TerserPlugin"},{id:"UglifyJsPlugin"}]},{title0:e(({value:l,isActive:h})=>[...a[2]||(a[2]=[i("TerserPlugin",-1)])]),title1:e(({value:l,isActive:h})=>[...a[3]||(a[3]=[i("UglifyJsPlugin",-1)])]),tab0:e(({value:l,isActive:h})=>[...a[4]||(a[4]=[s("div",{class:"language-js line-numbers-mode","data-highlighter":"shiki","data-ext":"js",style:{"--shiki-light":"#393a34","--shiki-dark":"#dbd7caee","--shiki-light-bg":"#ffffff","--shiki-dark-bg":"#121212"}},[s("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code"},[s("code",{class:"language-js"},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A0ADA0","--shiki-dark":"#758575DD"}},"// webpack.config.js")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#AB5959","--shiki-dark":"#CB7676"}},"const"),s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}}," TerserPlugin"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}}," ="),s("span",{style:{"--shiki-light":"#59873A","--shiki-dark":"#80A665"}}," require"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},"("),s("span",{style:{"--shiki-light":"#B5695977","--shiki-dark":"#C98A7D77"}},'"'),s("span",{style:{"--shiki-light":"#B56959","--shiki-dark":"#C98A7D"}},"terser-webpack-plugin"),s("span",{style:{"--shiki-light":"#B5695977","--shiki-dark":"#C98A7D77"}},'"'),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},");")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#998418","--shiki-dark":"#B8A965"}},"module"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},"."),s("span",{style:{"--shiki-light":"#998418","--shiki-dark":"#B8A965"}},"exports"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}}," ="),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A0ADA0","--shiki-dark":"#758575DD"}},"  // 其他配置...")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#998418","--shiki-dark":"#B8A965"}},"  optimization"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},":"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#998418","--shiki-dark":"#B8A965"}},"    minimizer"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},":"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}}," [")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#AB5959","--shiki-dark":"#CB7676"}},"      new"),s("span",{style:{"--shiki-light":"#59873A","--shiki-dark":"#80A665"}}," TerserPlugin"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},"({")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A0ADA0","--shiki-dark":"#758575DD"}},"        // 开启 Tree Shaking")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#998418","--shiki-dark":"#B8A965"}},"        treeShaking"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},":"),s("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}}," true"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},"      }),")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},"    ],")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},"  },")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},"};")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),tab1:e(({value:l,isActive:h})=>[...a[5]||(a[5]=[s("div",{class:"language-js line-numbers-mode","data-highlighter":"shiki","data-ext":"js",style:{"--shiki-light":"#393a34","--shiki-dark":"#dbd7caee","--shiki-light-bg":"#ffffff","--shiki-dark-bg":"#121212"}},[s("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code"},[s("code",{class:"language-js"},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A0ADA0","--shiki-dark":"#758575DD"}},"// webpack.config.js")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#AB5959","--shiki-dark":"#CB7676"}},"const"),s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}}," UglifyJsPlugin"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}}," ="),s("span",{style:{"--shiki-light":"#59873A","--shiki-dark":"#80A665"}}," require"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},"("),s("span",{style:{"--shiki-light":"#B5695977","--shiki-dark":"#C98A7D77"}},'"'),s("span",{style:{"--shiki-light":"#B56959","--shiki-dark":"#C98A7D"}},"uglifyjs-webpack-plugin"),s("span",{style:{"--shiki-light":"#B5695977","--shiki-dark":"#C98A7D77"}},'"'),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},");")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#998418","--shiki-dark":"#B8A965"}},"module"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},"."),s("span",{style:{"--shiki-light":"#998418","--shiki-dark":"#B8A965"}},"exports"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}}," ="),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#A0ADA0","--shiki-dark":"#758575DD"}},"  // 其他配置...")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#998418","--shiki-dark":"#B8A965"}},"  optimization"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},":"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#998418","--shiki-dark":"#B8A965"}},"    minimize"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},":"),s("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}}," true"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#998418","--shiki-dark":"#B8A965"}},"    minimizer"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},":"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}}," [")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#AB5959","--shiki-dark":"#CB7676"}},"      new"),s("span",{style:{"--shiki-light":"#59873A","--shiki-dark":"#80A665"}}," UglifyJsPlugin"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},"({")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#998418","--shiki-dark":"#B8A965"}},"        cache"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},":"),s("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}}," true"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#998418","--shiki-dark":"#B8A965"}},"        parallel"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},":"),s("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}}," true"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#998418","--shiki-dark":"#B8A965"}},"        sourceMap"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},":"),s("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}}," true"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},","),s("span",{style:{"--shiki-light":"#A0ADA0","--shiki-dark":"#758575DD"}}," // 如果需要source map的话")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},"      }),")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},"    ],")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},"  },")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},"};")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])]),_:1}),a[10]||(a[10]=n(`<h2 id="三、优化增强" tabindex="-1"><a class="header-anchor" href="#三、优化增强"><span>三、优化增强</span></a></h2><div class="hint-container tip"><p class="hint-container-title">如何优化 Tree Shaking 的效果？</p><p>webpack 5 中，Tree Shaking 在<strong>生产环境下是默认开启</strong> 的。以下几个方面都可以增强其效果。</p><ul><li>设置 production 模式（会自动启用相关优化）</li><li>必须使用 ES6 模块（<code>import</code>/<code>export</code>）</li><li>确保没有编译器（如 Babel）将 ES6 模块转译为 CommonJS 模块</li><li>魔法注释：也可以使用<code>/*#__PURE__*/</code>注释来标记</li><li>合理标记库的副作用：在 <code>package.json</code> 里配置<code>sideEffects</code> 选项 <ul><li>如果为 <code>false</code>，表示所有文件都是无副作用的</li><li>标记有副作用的模块：<code>sideEffects</code>属性为一个数组，列出所有有副作用的文件路径</li></ul></li></ul></div><p>要配置 Webpack 实现代码的无用代码剔除，需要确保一下几点：</p><h3 id="_1、开启生产模式" tabindex="-1"><a class="header-anchor" href="#_1、开启生产模式"><span>1、开启生产模式</span></a></h3><p>配置<code>mode</code>为<code>production</code>，Webpack 会自动启用相关优化。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-js"><span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">module</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">exports</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  mode</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">production</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // 其他配置...</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">};</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、确保使用-es6-模块化" tabindex="-1"><a class="header-anchor" href="#_2、确保使用-es6-模块化"><span>2、确保使用 ES6 模块化</span></a></h3><p>Webpack 的 Tree Shaking 功能主要依赖于 ES 模块的静态结构。</p><ul><li>确保你的代码使用 ES 模块，而不是 CommonJS 模块。</li><li>确保你的代码中没有使用动态拼接的路径，主要针对 <code>import()</code> 动态导入。</li><li>如果你的代码使用了 CommonJS 模块，你需要使用 Babel 等工具将其转换为 ES6 模块。同时防止 Babel 把 ES6 模块转成 CommonJS 模块。</li></ul>`,9)),s("p",null,[k(r,{href:"./10.%E4%B8%BA%E4%BB%80%E4%B9%88%20Tree%20Sharking%20%E5%BF%85%E9%A1%BB%E4%BD%BF%E7%94%A8ES%E6%A8%A1%E5%9D%97.md",class:"read-more"},{default:e(()=>[...a[6]||(a[6]=[i("扩展阅读，为什么要使用ES6模块？",-1)])]),_:1})]),a[11]||(a[11]=n(`<h3 id="_3、标记副作用" tabindex="-1"><a class="header-anchor" href="#_3、标记副作用"><span>3、标记副作用</span></a></h3><p>在 Webpack 的 Tree Shaking 过程中，<strong>副作用</strong> 指的是模块执行时除了导出值之外的其他行为。这些行为可能包括：</p><ul><li>修改全局变量、在 <code>window</code> 上挂载对象</li><li>执行 I/O 操作</li><li>动态拼接路径引入的模块或者路由（路径包含变量）</li><li>特殊语法：<code>eval</code>、<code>with</code></li><li>导入一个 CSS 文件（它会直接影响页面样式）</li></ul><p>如果直接删除有副作用的代码，可能导致代码运行时报错。因此，我们需要进行相关的配置，来告诉 Webpack 哪些模块是有副作用的，哪些模块是无副作用的。</p><h4 id="sideeffects-属性" tabindex="-1"><a class="header-anchor" href="#sideeffects-属性"><span><strong><code>sideEffects</code> 属性</strong></span></a></h4><p>在 <code>package.json</code> 中设置 <code>sideEffects</code> 为 <code>false</code>，表示仓库下所有模块都没有副作用，Webpack 移除未使用的导出是安全的。如果存在有副作用的代码，我们可以配置一个数组来告诉 Webpack 保守处理。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-js"><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // 标记所有的代码都没有副作用</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">  &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">sideEffects</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">: </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">false</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // 标记有副作用的文件</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">  &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">sideEffects</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">: </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">    &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">./src/some-side-effectful-file.js</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">    &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">./src/polyfill.js</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">    &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">*.css</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  ]</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="pure-注释" tabindex="-1"><a class="header-anchor" href="#pure-注释"><span><strong><code>/*#__PURE__*/</code> 注释</strong></span></a></h4><p>标记函数、模块调用为无副作用，等于告诉 Webpack，如果该函数、模块未被调用，可以被安全的移除。</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-javascript"><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> result</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> /*#__PURE__*/</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> someFunction</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">class</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> MyClass</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  constructor</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    /*#__PURE__*/</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> initPolyfill</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> value</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> /*#__PURE__*/</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> a</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> b</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> c</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、编写纯模块" tabindex="-1"><a class="header-anchor" href="#_4、编写纯模块"><span>4、编写纯模块</span></a></h3><p>尽量编写无副作用的模块。函数尽量是纯函数、尽量不导入其他的依赖、模块的导入不应该改变全局状态。</p><div class="hint-container tip"><p class="hint-container-title">什么是纯函数？</p><p>一个函数的返回结果只依赖于它的参数，并且在执行过程中没有副作用，就称为纯函数。</p></div><h2 id="四、示例" tabindex="-1"><a class="header-anchor" href="#四、示例"><span>四、示例</span></a></h2><p>假设模块<code>math.js</code>如下：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-javascript"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">export</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> function</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> square</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">x</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">  return</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> x</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> x</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">export</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> function</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> cube</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">x</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  console</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">cube</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 副作用</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">  return</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> x</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> x</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> x</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果只使用 <code>square</code>，<code>cube</code> 中的 <code>console.log</code> 是副作用，Webpack 可能会因此不会移除 <code>cube</code>。</p>`,17))])}const D=c(y,[["render",m]]),f=JSON.parse('{"path":"/Webpack/wlrro4n1/","title":"9. 什么是 Tree Shaking ？如何配置实现？","lang":"zh-CN","frontmatter":{"title":"9. 什么是 Tree Shaking ？如何配置实现？","createTime":"2025/03/15 14:24:21","permalink":"/Webpack/wlrro4n1/"},"readingTime":{"minutes":5.04,"words":1511},"git":{"createdTime":1758993364000,"updatedTime":1758993364000,"contributors":[{"name":"kangkang shang","username":"","email":"535634238@qq.com","commits":1,"avatar":"https://gravatar.com/avatar/899a2a8091fc73ff6879f8a45f98a5a42ca8b9665bca19ce8af3a144e416ed11?d=retro"}],"changelog":[{"hash":"1eb9b32660588040229600108dbdda4327afcdb3","time":1758993364000,"email":"535634238@qq.com","author":"kangkang shang","message":"docs(Javascript): 更新Generator生成器函数文档内容"}]},"filePathRelative":"notes/Webpack/99.面试题/9.什么是 Tree Shaking ？如何配置实现？.md","headers":[],"bulletin":false}');export{D as comp,f as data};
