import{_ as p,c as k,d as h,a as s,e as l,b as n,w as a,r as e,o as d}from"./app-Bg7EXfK3.js";const r={},o={class:"language-ts","data-highlighter":"shiki","data-ext":"ts",style:{"--shiki-light":"#393a34","--shiki-dark":"#dbd7caee","--shiki-light-bg":"#ffffff","--shiki-dark-bg":"#121212"}},g={class:"shiki shiki-themes vitesse-light vitesse-dark vp-code twoslash lsp"},y={class:"language-ts"},A={class:"line"},D={style:{"--shiki-light":"#2E8F82","--shiki-dark":"#5DA994"}},B={class:"line"},v={style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},u={class:"line"},m={style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},b={class:"line"},f={style:{"--shiki-light":"#2E8F82","--shiki-dark":"#5DA994"}},w={style:{"--shiki-light":"#59873A","--shiki-dark":"#80A665"}},C={class:"line"},E={style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},F={class:"line"},x={style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},c={class:"line"},S={style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},T={style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},I={class:"line"},q={style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},N={style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},U={class:"line"},V={style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},P={style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}};function z(J,i){const t=e("v-menu");return d(),k("div",null,[i[87]||(i[87]=h(`<p>以下是 TypeScript 中接口（Interface）与抽象类（Abstract Class）的核心区别总结整理：</p><table><thead><tr><th>维度 ‌</th><th>‌ 接口（Interface）‌</th><th>‌ 抽象类（Abstract Class）‌</th></tr></thead><tbody><tr><td>定义方式 ‌</td><td>‌ <code>interface</code> 关键字</td><td>‌ <code>abstract class</code> 关键字</td></tr><tr><td>实例化能 ‌</td><td>‌ 不能实例化</td><td>‌ 不能直接实例化</td></tr><tr><td>方法实现 ‌</td><td>‌ 仅声明方法签名</td><td>‌ 可包含无实现的抽象方法和有实现的具体方法</td></tr><tr><td>成员变量 ‌</td><td>‌ 仅包含实例变量、常量</td><td>‌ 可包含实例变量、静态变量、常量等</td></tr><tr><td>构造函数</td><td>无构造函数</td><td>可以有构造函数</td></tr><tr><td>继承</td><td>可以多继承，继承类、接口、对象类型</td><td>只能单继承，继承类、构造函数</td></tr><tr><td>实现</td><td>可以被类实现</td><td>只能通过被类继承去实现</td></tr><tr><td>访问修饰符</td><td>默认只包含 <code>public</code> 成员</td><td>支持 <code>public</code>、<code>protected</code>、<code>private</code></td></tr><tr><td>静态成员</td><td>不包含</td><td>可包含静态方法和静态属性</td></tr><tr><td>设计目的</td><td>描述对象结构/行为契约</td><td>提供通用基类模板</td></tr></tbody></table><h2 id="💡-关键场景差异-附典型用途" tabindex="-1"><a class="header-anchor" href="#💡-关键场景差异-附典型用途"><span>💡 关键场景差异（附典型用途）：</span></a></h2><h3 id="_1-接口适用场景-‌" tabindex="-1"><a class="header-anchor" href="#_1-接口适用场景-‌"><span>1. 接口适用场景 ‌</span></a></h3><ul><li>定义对象形状（如 API 响应结构）</li><li>声明跨类共享的能力（如 Serializable 接口）</li><li>替代多重继承（通过 implements 组合多个接口）</li></ul><h3 id="_2-抽象类适用场景-‌" tabindex="-1"><a class="header-anchor" href="#_2-抽象类适用场景-‌"><span>2. 抽象类适用场景 ‌</span></a></h3><ul><li>封装通用逻辑（如基础 CRUD 方法的默认实现）</li><li>强制子类实现核心方法（如抽象方法 render()）</li><li>构建类层次结构（如 Animal → Cat/Dog）</li></ul><h2 id="⚙️-代码示例对比" tabindex="-1"><a class="header-anchor" href="#⚙️-代码示例对比"><span>⚙️ 代码示例对比：</span></a></h2><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-ts"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// ✅ 接口：仅定义契约</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">interface</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> Drawable</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  draw</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">():</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> void</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 抽象方法声明</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// ✅ 抽象类：包含实现与抽象方法</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">abstract</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> class</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> Shape</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  protected</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> color</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">string</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 成员变量</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  constructor</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">color</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">string</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">color</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> color</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  }</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 构造器</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  abstract</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> getArea</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">():</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 抽象方法</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  public</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> display</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">():</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> void</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 具体方法</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    console</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">\`</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Color: </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">\${</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">color</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">}</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">\`</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// 类实现接口并继承抽象类</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">class</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> Circle</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> extends</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> Shape</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> implements</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> Drawable</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  constructor</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">color</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">string</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> public</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> radius</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">number</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">    super</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">color</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  getArea</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">():</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> number</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Math</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">PI</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">radius</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> **</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  draw</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">():</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> void</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    console</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Drawing circle...</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>说明 ‌：</p><p>Shape 抽象类提供 color 属性和 display() 默认实现，强制子类实现 getArea() Drawable 接口独立声明绘图能力，可被任意类实现（如 Circle）</p><h2 id="📌-总结建议" tabindex="-1"><a class="header-anchor" href="#📌-总结建议"><span>📌 总结建议：</span></a></h2><table><thead><tr><th>选择依据 ‌</th><th>‌ 推荐方式 ‌</th></tr></thead><tbody><tr><td>需要多态继承或代码复用</td><td>✅ 用抽象类（extends）</td></tr><tr><td>定义轻量级契约或组合多个行为</td><td>✅ 用接口（implements）</td></tr><tr><td>既需复用代码又需描述对象结构</td><td>🔄 组合使用（如上例）</td></tr></tbody></table><p>设计提示：优先用接口描述行为，用抽象类封装通用逻辑，避免过度耦合。</p>`,14)),s("div",o,[s("pre",g,[s("code",y,[s("span",A,[i[2]||(i[2]=s("span",{style:{"--shiki-light":"#AB5959","--shiki-dark":"#CB7676"}},"type",-1)),i[3]||(i[3]=s("span",{style:{"--shiki-light":"#2E8F82","--shiki-dark":"#5DA994"}}," ",-1)),s("span",D,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>[...i[0]||(i[0]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark",style:{"--shiki-light":"#393a34","--shiki-dark":"#dbd7caee","--shiki-light-bg":"#ffffff","--shiki-dark-bg":"#121212"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#AB5959","--shiki-dark":"#CB7676"}},"type"),s("span",{style:{"--shiki-light":"#2E8F82","--shiki-dark":"#5DA994"}}," IUser"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}}," ="),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},"    name"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},": "),s("span",{style:{"--shiki-light":"#2E8F82","--shiki-dark":"#5DA994"}},"string"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},"    age"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},": "),s("span",{style:{"--shiki-light":"#2E8F82","--shiki-dark":"#5DA994"}},"number"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},"}")])])])])],-1)])]),default:a(()=>[i[1]||(i[1]=s("span",null,"IUser",-1))]),_:1})]),i[4]||(i[4]=s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}}," =",-1)),i[5]||(i[5]=s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}}," {",-1))]),i[71]||(i[71]=l(`
`,-1)),s("span",B,[i[8]||(i[8]=s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},"  ",-1)),s("span",v,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>[...i[6]||(i[6]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#59873A","--shiki-dark":"#80A665"}},"name"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},":"),s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}}," string")])],-1)])]),default:a(()=>[i[7]||(i[7]=s("span",null,"name",-1))]),_:1})]),i[9]||(i[9]=s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},": ",-1)),i[10]||(i[10]=s("span",{style:{"--shiki-light":"#2E8F82","--shiki-dark":"#5DA994"}},"string",-1)),i[11]||(i[11]=s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},";",-1))]),i[72]||(i[72]=l(`
`,-1)),s("span",u,[i[14]||(i[14]=s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},"  ",-1)),s("span",m,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>[...i[12]||(i[12]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#59873A","--shiki-dark":"#80A665"}},"age"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},":"),s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}}," number")])],-1)])]),default:a(()=>[i[13]||(i[13]=s("span",null,"age",-1))]),_:1})]),i[15]||(i[15]=s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},": ",-1)),i[16]||(i[16]=s("span",{style:{"--shiki-light":"#2E8F82","--shiki-dark":"#5DA994"}},"number",-1)),i[17]||(i[17]=s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},";",-1))]),i[73]||(i[73]=l(`
`,-1)),i[74]||(i[74]=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},"};")],-1)),i[75]||(i[75]=l(`
`,-1)),i[76]||(i[76]=s("span",{class:"line"},null,-1)),i[77]||(i[77]=l(`
`,-1)),s("span",b,[i[22]||(i[22]=s("span",{style:{"--shiki-light":"#AB5959","--shiki-dark":"#CB7676"}},"class",-1)),i[23]||(i[23]=s("span",{style:{"--shiki-light":"#2E8F82","--shiki-dark":"#5DA994"}}," ",-1)),s("span",f,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>[...i[18]||(i[18]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#AB5959","--shiki-dark":"#CB7676"}},"class"),s("span",{style:{"--shiki-light":"#2E8F82","--shiki-dark":"#5DA994"}}," aaa")])],-1)])]),default:a(()=>[i[19]||(i[19]=s("span",null,"aaa",-1))]),_:1})]),i[24]||(i[24]=s("span",{style:{"--shiki-light":"#AB5959","--shiki-dark":"#CB7676"}}," implements",-1)),i[25]||(i[25]=s("span",{style:{"--shiki-light":"#59873A","--shiki-dark":"#80A665"}}," ",-1)),s("span",w,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>[...i[20]||(i[20]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark",style:{"--shiki-light":"#393a34","--shiki-dark":"#dbd7caee","--shiki-light-bg":"#ffffff","--shiki-dark-bg":"#121212"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#AB5959","--shiki-dark":"#CB7676"}},"type"),s("span",{style:{"--shiki-light":"#2E8F82","--shiki-dark":"#5DA994"}}," IUser"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}}," ="),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}}," {")]),l(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},"    name"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},": "),s("span",{style:{"--shiki-light":"#2E8F82","--shiki-dark":"#5DA994"}},"string"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},"    age"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},": "),s("span",{style:{"--shiki-light":"#2E8F82","--shiki-dark":"#5DA994"}},"number"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},";")]),l(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},"}")])])])])],-1)])]),default:a(()=>[i[21]||(i[21]=s("span",null,"IUser",-1))]),_:1})]),i[26]||(i[26]=s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}}," {",-1))]),i[78]||(i[78]=l(`
`,-1)),s("span",C,[i[29]||(i[29]=s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},"  ",-1)),s("span",E,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>[...i[27]||(i[27]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},"aaa"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},"."),s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},"name"),s("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},": "),s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},"string")])],-1)])]),default:a(()=>[i[28]||(i[28]=s("span",null,"name",-1))]),_:1})]),i[30]||(i[30]=s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},": ",-1)),i[31]||(i[31]=s("span",{style:{"--shiki-light":"#2E8F82","--shiki-dark":"#5DA994"}},"string",-1)),i[32]||(i[32]=s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},";",-1))]),i[79]||(i[79]=l(`
`,-1)),s("span",F,[i[35]||(i[35]=s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},"  ",-1)),s("span",x,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>[...i[33]||(i[33]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},"aaa"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},"."),s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},"age"),s("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},": "),s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},"number")])],-1)])]),default:a(()=>[i[34]||(i[34]=s("span",null,"age",-1))]),_:1})]),i[36]||(i[36]=s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},": ",-1)),i[37]||(i[37]=s("span",{style:{"--shiki-light":"#2E8F82","--shiki-dark":"#5DA994"}},"number",-1)),i[38]||(i[38]=s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},";",-1))]),i[80]||(i[80]=l(`
`,-1)),s("span",c,[i[43]||(i[43]=s("span",{style:{"--shiki-light":"#AB5959","--shiki-dark":"#CB7676"}},"  constructor",-1)),i[44]||(i[44]=s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},"(",-1)),s("span",S,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>[...i[39]||(i[39]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#59873A","--shiki-dark":"#80A665"}},"name"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},":"),s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}}," string")])],-1)])]),default:a(()=>[i[40]||(i[40]=s("span",null,"name",-1))]),_:1})]),i[45]||(i[45]=s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},": ",-1)),i[46]||(i[46]=s("span",{style:{"--shiki-light":"#2E8F82","--shiki-dark":"#5DA994"}},"string",-1)),i[47]||(i[47]=s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},",",-1)),i[48]||(i[48]=s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}}," ",-1)),s("span",T,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>[...i[41]||(i[41]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#59873A","--shiki-dark":"#80A665"}},"age"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},":"),s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}}," number")])],-1)])]),default:a(()=>[i[42]||(i[42]=s("span",null,"age",-1))]),_:1})]),i[49]||(i[49]=s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},": ",-1)),i[50]||(i[50]=s("span",{style:{"--shiki-light":"#2E8F82","--shiki-dark":"#5DA994"}},"number",-1)),i[51]||(i[51]=s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},")",-1)),i[52]||(i[52]=s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}}," {",-1))]),i[81]||(i[81]=l(`
`,-1)),s("span",I,[i[57]||(i[57]=s("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"    this",-1)),i[58]||(i[58]=s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},".",-1)),s("span",q,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>[...i[53]||(i[53]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},"aaa"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},"."),s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},"name"),s("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},": "),s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},"string")])],-1)])]),default:a(()=>[i[54]||(i[54]=s("span",null,"name",-1))]),_:1})]),i[59]||(i[59]=s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}}," =",-1)),i[60]||(i[60]=s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}}," ",-1)),s("span",N,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>[...i[55]||(i[55]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#59873A","--shiki-dark":"#80A665"}},"name"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},":"),s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}}," string")])],-1)])]),default:a(()=>[i[56]||(i[56]=s("span",null,"name",-1))]),_:1})]),i[61]||(i[61]=s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},";",-1))]),i[82]||(i[82]=l(`
`,-1)),s("span",U,[i[66]||(i[66]=s("span",{style:{"--shiki-light":"#A65E2B","--shiki-dark":"#C99076"}},"    this",-1)),i[67]||(i[67]=s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},".",-1)),s("span",V,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>[...i[62]||(i[62]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},"aaa"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},"."),s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},"age"),s("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},": "),s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},"number")])],-1)])]),default:a(()=>[i[63]||(i[63]=s("span",null,"age",-1))]),_:1})]),i[68]||(i[68]=s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}}," =",-1)),i[69]||(i[69]=s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}}," ",-1)),s("span",P,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>[...i[64]||(i[64]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#59873A","--shiki-dark":"#80A665"}},"age"),s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},":"),s("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}}," number")])],-1)])]),default:a(()=>[i[65]||(i[65]=s("span",null,"age",-1))]),_:1})]),i[70]||(i[70]=s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},";",-1))]),i[83]||(i[83]=l(`
`,-1)),i[84]||(i[84]=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},"  }")],-1)),i[85]||(i[85]=l(`
`,-1)),i[86]||(i[86]=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},"}")],-1))])])]),i[88]||(i[88]=h('<h3 id="_1、类型别名-type" tabindex="-1"><a class="header-anchor" href="#_1、类型别名-type"><span>1、类型别名 Type</span></a></h3><ol><li>类型别名可以用来定义任意类型、类型组合，也叫起别名。</li><li>type 只能被继承，不能继承其他类型，只能通过交叉类型来实现扩展。</li><li>type 可以被类实现，不能实现其他类型。</li><li>type 不允许重复定义，会报错。</li><li>type 不允许重名，会报错。</li></ol><h3 id="_2、接口-interfaces" tabindex="-1"><a class="header-anchor" href="#_2、接口-interfaces"><span>2、接口 Interfaces</span></a></h3><ol><li>接口只能用来描述对象、数组、函数、构造函数的类型。</li><li>接口可以继承接口、type、类，只保留成员定义，不保留具体实现。</li><li>接口只能被实现。</li><li>接口允许重复定义，会被合并成一个接口。</li><li>接口允许重名，和接口重名的接口会被合并成一个接口，和类重名的类会被合并到类里。</li></ol><h3 id="_3、类-class" tabindex="-1"><a class="header-anchor" href="#_3、类-class"><span>3、类 class</span></a></h3><ol><li><p>类只可以用作实例对象的类型。</p></li><li><p>类可以继承类、构造函数。</p></li><li><p>类可以实现接口、type 定义的类型。</p></li><li><p>类不允许重复定义，会报错。</p></li><li><p>类允许和接口重名，会将接口合并到类里。</p></li><li><p>类只能单继承，但是可以被多继承。</p></li><li><p>接口用来描述对象的结构和方法。</p></li><li><p>接口可以用来描述变量、函数入参的具体约束。</p></li><li><p>接口可以被类实现，实现接口的类必须实现接口中定义的所有属性和方法。</p></li><li><p>接口可以继承其他接口，实现多继承的效果。</p></li><li><p>接口可以继承类的成员定义，但是不能继承类的具体实现</p></li><li><p>接口可以继承接揭露</p></li></ol><h3 id="_2、类-classes" tabindex="-1"><a class="header-anchor" href="#_2、类-classes"><span>2、类（Classes）</span></a></h3><ol><li>类可以继承类：一个类只能继承一个类，</li><li>类不可以继承接口</li><li>类不可以继承对象</li><li>类可以实现接口</li><li>一个类可以实现多个接口</li></ol>',8))])}const G=p(r,[["render",z]]),M=JSON.parse('{"path":"/TypeScript/h8abg6ii/","title":"11. 接口 vs 抽象类","lang":"zh-CN","frontmatter":{"title":"11. 接口 vs 抽象类","createTime":"2025/05/14 17:01:07","permalink":"/TypeScript/h8abg6ii/"},"readingTime":{"minutes":3.75,"words":1126},"git":{"createdTime":1758993364000,"updatedTime":1758993364000,"contributors":[{"name":"kangkang shang","username":"","email":"535634238@qq.com","commits":1,"avatar":"https://gravatar.com/avatar/899a2a8091fc73ff6879f8a45f98a5a42ca8b9665bca19ce8af3a144e416ed11?d=retro"}],"changelog":[{"hash":"1eb9b32660588040229600108dbdda4327afcdb3","time":1758993364000,"email":"535634238@qq.com","author":"kangkang shang","message":"docs(Javascript): 更新Generator生成器函数文档内容"}]},"filePathRelative":"notes/TypeScript/1.学习心得/11.接口 vs 抽象类.md","headers":[],"bulletin":false}');export{G as comp,M as data};
