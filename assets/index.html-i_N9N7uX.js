import{_ as i,c as a,d as e,o as n}from"./app-Bg7EXfK3.js";const t={};function l(o,s){return n(),a("div",null,[...s[0]||(s[0]=[e(`<h2 id="一、简介" tabindex="-1"><a class="header-anchor" href="#一、简介"><span>一、简介</span></a></h2><p>SassScript 支持 7 种主要的数据类型：</p><ul><li>数字，<code>1, 2, 13, 10px</code></li><li>字符串，有引号字符串与无引号字符串，<code>&quot;foo&quot;, &#39;bar&#39;, baz</code></li><li>颜色，<code>blue, #04a3f9, rgba(255,0,0,0.5)</code></li><li>布尔型，<code>true, false</code></li><li>空值，<code>null</code></li><li>数组 (list)，用空格或逗号作分隔符，<code>1.5em 1em 0 2em, Helvetica, Arial, sans-serif</code></li><li>maps, 相当于 JavaScript 的 object，<code>(key1: value1, key2: value2)</code></li></ul><p>SassScript 也支持其他 CSS 属性值，比如 Unicode 字符集，或 <code>!important</code> 声明。然而 Sass 不会特殊对待这些属性值，一律视为无引号字符串。</p><h2 id="二、数据类型" tabindex="-1"><a class="header-anchor" href="#二、数据类型"><span>二、数据类型</span></a></h2><h3 id="_1-数字-numbers" tabindex="-1"><a class="header-anchor" href="#_1-数字-numbers"><span>1. <strong>数字（Numbers）</strong></span></a></h3><ul><li><strong>特点</strong>：整数、小数、带单位（如 <code>12px</code>, <code>1.5rem</code>）或不带单位的值。</li><li><strong>示例</strong>：<code>42</code>, <code>3.14</code>, <code>100%</code>, <code>20px</code></li></ul><h3 id="_2-字符串-strings" tabindex="-1"><a class="header-anchor" href="#_2-字符串-strings"><span>2. <strong>字符串（Strings）</strong></span></a></h3><ul><li><strong>特点</strong>：可以带引号（<code>&quot;text&quot;</code>, <code>&#39;text&#39;</code>）或不带引号（如 <code>sans-serif</code>）。</li><li><strong>示例</strong>：<code>&quot;Helvetica&quot;</code>, <code>bold</code>, <code>url(&quot;image.png&quot;)</code></li></ul><h3 id="_3-颜色-colors" tabindex="-1"><a class="header-anchor" href="#_3-颜色-colors"><span>3. <strong>颜色（Colors）</strong></span></a></h3><ul><li><strong>特点</strong>：支持 HEX、RGB、RGBA、HSL、HSLA 等格式。</li><li><strong>示例</strong>：<code>#ff0000</code>, <code>rgb(255, 0, 0)</code>, <code>hsl(0, 100%, 50%)</code></li></ul><h3 id="_4-布尔值-booleans" tabindex="-1"><a class="header-anchor" href="#_4-布尔值-booleans"><span>4. <strong>布尔值（Booleans）</strong></span></a></h3><ul><li><strong>特点</strong>：逻辑值 <code>true</code> 或 <code>false</code>，用于条件判断。</li><li><strong>示例</strong>：<code>@if $is-active { ... }</code></li></ul><h3 id="_5-空值-null" tabindex="-1"><a class="header-anchor" href="#_5-空值-null"><span>5. <strong>空值（Null）</strong></span></a></h3><ul><li><strong>特点</strong>：表示“无值”，用于变量占位或重置。</li><li><strong>示例</strong>：<code>$variable: null;</code></li></ul><h3 id="_6-列表-lists" tabindex="-1"><a class="header-anchor" href="#_6-列表-lists"><span>6. <strong>列表（Lists）</strong></span></a></h3><ul><li><strong>特点</strong>：用空格或逗号分隔的集合（类似数组）。</li><li><strong>示例</strong>：<code>1px 2px 3px</code>, <code>&quot;Arial&quot;, sans-serif</code></li></ul><h3 id="_7-映射-maps" tabindex="-1"><a class="header-anchor" href="#_7-映射-maps"><span>7. <strong>映射（Maps）</strong></span></a></h3><ul><li><strong>特点</strong>：键值对集合（类似 JavaScript 对象）。</li><li><strong>示例</strong>：<code>(&quot;primary&quot;: #007bff, &quot;secondary&quot;: #6c757d)</code></li></ul><h2 id="三、其他补充类型" tabindex="-1"><a class="header-anchor" href="#三、其他补充类型"><span>三、其他补充类型</span></a></h2><ul><li><strong>函数引用（Function References）</strong>：通过 <code>get-function()</code> 引用函数，用于动态调用。</li></ul><h2 id="四、常见操作" tabindex="-1"><a class="header-anchor" href="#四、常见操作"><span>四、常见操作</span></a></h2><ul><li><strong>类型检查</strong>：<div class="language-scss line-numbers-mode" data-highlighter="shiki" data-ext="scss" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-scss"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">type-of(42px)    </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// &quot;number&quot;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">is-color(</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">#</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">fff</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)   </span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><strong>类型转换</strong>：<div class="language-scss line-numbers-mode" data-highlighter="shiki" data-ext="scss" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-scss"><span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">$number</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 42</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">px</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 转换为带单位的数字</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">$string</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 42</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 转换为字符串 &quot;42&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="五、实际应用" tabindex="-1"><a class="header-anchor" href="#五、实际应用"><span>五、实际应用</span></a></h2><ul><li><strong>列表</strong>：生成间距工具类（如 <code>.mt-10</code>, <code>.mb-20</code>）。</li><li><strong>映射</strong>：管理主题颜色或响应式断点。</li><li><strong>布尔值</strong>：控制功能开关（如暗黑模式）。</li></ul><p>掌握这些数据类型，能更高效地编写动态、可维护的 Sass 代码！ 🚀</p>`,26)])])}const d=i(t,[["render",l]]),c=JSON.parse('{"path":"/Sass/8aqcj18g/","title":"内置数据类型","lang":"zh-CN","frontmatter":{"title":"内置数据类型","createTime":"2025/04/04 15:49:22","permalink":"/Sass/8aqcj18g/"},"readingTime":{"minutes":1.6,"words":481},"git":{"createdTime":1758993364000,"updatedTime":1758993364000,"contributors":[{"name":"kangkang shang","username":"","email":"535634238@qq.com","commits":1,"avatar":"https://gravatar.com/avatar/899a2a8091fc73ff6879f8a45f98a5a42ca8b9665bca19ce8af3a144e416ed11?d=retro"}],"changelog":[{"hash":"1eb9b32660588040229600108dbdda4327afcdb3","time":1758993364000,"email":"535634238@qq.com","author":"kangkang shang","message":"docs(Javascript): 更新Generator生成器函数文档内容"}]},"filePathRelative":"notes/Sass/1.快速入门/9.内置数据类型.md","headers":[],"bulletin":false}');export{d as comp,c as data};
