import{_ as i,c as a,d as e,o as n}from"./app-Bg7EXfK3.js";const t={};function l(h,s){return n(),a("div",null,[...s[0]||(s[0]=[e(`<p>在 JavaScript 中，有三种常用的定时器方法：</p><h2 id="_1-settimeout" tabindex="-1"><a class="header-anchor" href="#_1-settimeout"><span>1. setTimeout()</span></a></h2><p>该方法用于在一定时间间隔之后执行一次指定的函数。它接受两个参数，第一个参数是要执行的函数，第二个参数是延迟的毫秒数。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-js"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">setTimeout</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> ()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // 要执行的函数</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">},</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 1000</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 延迟一秒钟执行</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-setinterval" tabindex="-1"><a class="header-anchor" href="#_2-setinterval"><span>2. setInterval()</span></a></h2><p>该方法用于按照指定的时间间隔周期性地执行指定的函数。它也接受两个参数，第一个参数是要执行的函数，第二个参数是时间间隔的毫秒数。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-js"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">setInterval</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> ()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // 要执行的函数</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">},</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 2000</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 每两秒钟执行一次</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-requestanimationframe" tabindex="-1"><a class="header-anchor" href="#_3-requestanimationframe"><span>3. requestAnimationFrame()</span></a></h2><p>该方法用于在下一次浏览器重绘之前执行指定的函数。它接受一个参数，就是要执行的函数。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-js"><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> animate</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // 动画逻辑</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  requestAnimationFrame</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">animate</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">animate</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 开始动画</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请注意，<code>setTimeout()</code> 和 <code>setInterval()</code> 方法返回一个<code>计时器 ID</code>，可以使用 <code>clearTimeout()</code> 或 <code>clearInterval()</code> 方法来取消定时器。而 <code>requestAnimationFrame()</code> 方法没有返回值，不能被取消，但可以通过停止调用递归执行的函数来停止动画。</p>`,11)])])}const d=i(t,[["render",l]]),k=JSON.parse('{"path":"/Javascript/3psm9i3u/","title":"13. 定时器 setTimeout()、setInterval()、requestAnimationFrame()","lang":"zh-CN","frontmatter":{"title":"13. 定时器 setTimeout()、setInterval()、requestAnimationFrame()","createTime":"2025/03/12 17:19:50","permalink":"/Javascript/3psm9i3u/"},"readingTime":{"minutes":1.02,"words":307},"git":{"createdTime":1758993364000,"updatedTime":1758993364000,"contributors":[{"name":"kangkang shang","username":"","email":"535634238@qq.com","commits":1,"avatar":"https://gravatar.com/avatar/899a2a8091fc73ff6879f8a45f98a5a42ca8b9665bca19ce8af3a144e416ed11?d=retro"}],"changelog":[{"hash":"1eb9b32660588040229600108dbdda4327afcdb3","time":1758993364000,"email":"535634238@qq.com","author":"kangkang shang","message":"docs(Javascript): 更新Generator生成器函数文档内容"}]},"filePathRelative":"notes/Javascript/99.面试题/13.三种定时器的区别（setTimeout()、setInterval()、requestAnimationFrame()）.md","headers":[],"bulletin":false}');export{d as comp,k as data};
